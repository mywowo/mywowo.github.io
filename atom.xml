<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一个人的江湖</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-19T13:44:15.597Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>geek liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo建立个人博客</title>
    <link href="http://yoursite.com/2018/11/17/hello-world/"/>
    <id>http://yoursite.com/2018/11/17/hello-world/</id>
    <published>2018-11-17T13:31:24.061Z</published>
    <updated>2018-11-19T13:44:15.597Z</updated>
    
    <content type="html"><![CDATA[<p>a.注册godday购买域名，注册GitHub当服务器。<br>b.下载git,下载node.js<br>c.开始配置<br>1.配置SSH<br>打开git bash终端。<br>设置user.name和user.email。</p><p>git config –global user.name “你的GitHub用户名”<br>git config –global user.email “你的GitHub注册邮箱”</p><p>生成ssh密匙</p><p>ssh-keygen -t rsa -C “你的GitHub注册邮箱”</p><p>此时，在用户文件夹下就会有一个新的文件夹.ssh，里面有刚刚创建的ssh密钥文件id_rsa和id_rsa.pub。<br>将公匙添加到github上<br>详细教程自行baidu。<br>用户头像→Settings→SSH and GPG keys→New SSH key→将id_rsa.pub中的内容复制到Key文本框中，然后点击Add SSH key(添加SSH)按钮。</p><p>2.安装HEXO</p><h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><p>npm install hexo-cli g</p><h1 id="初始化博客文件夹"><a href="#初始化博客文件夹" class="headerlink" title="初始化博客文件夹"></a>初始化博客文件夹</h1><p>hexo init blog</p><h1 id="切换到该路径"><a href="#切换到该路径" class="headerlink" title="切换到该路径"></a>切换到该路径</h1><p>cd blog</p><h1 id="安装hexo的扩展插件"><a href="#安装hexo的扩展插件" class="headerlink" title="安装hexo的扩展插件"></a>安装hexo的扩展插件</h1><p>npm install</p><h1 id="安装其它插件"><a href="#安装其它插件" class="headerlink" title="安装其它插件"></a>安装其它插件</h1><p>npm install hexo-server –save<br>npm install hexo-admin –save<br>npm install hexo-generator-archive –save<br>npm install hexo-generator-feed –save<br>npm install hexo-generator-search –save<br>npm install hexo-generator-tag –save<br>npm install hexo-deployer-git –save<br>npm install hexo-generator-sitemap –save</p><p>3.初探hexo<br>第一次使用hexo，在本地创建服务器使用。</p><h1 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h1><p>hexo generate</p><h1 id="开启本地服务器"><a href="#开启本地服务器" class="headerlink" title="开启本地服务器"></a>开启本地服务器</h1><p>hexo s<br>打开浏览器，地址栏中输入：<a href="http://localhost:4000/,应该可以看见刚刚创建的博客了。" target="_blank" rel="noopener">http://localhost:4000/,应该可以看见刚刚创建的博客了。</a><br>问题：为什么访问<a href="http://localhost:4000/，无反应？" target="_blank" rel="noopener">http://localhost:4000/，无反应？</a><br>解决方法：可能是由于端口问题引起的。使用Ctrl+C中断本地服务，使用命令hexo s -p 5000重新开启本地服务，访问<a href="http://localhost:5000/可以看到博客页面了。" target="_blank" rel="noopener">http://localhost:5000/可以看到博客页面了。</a><br>将hexo博客部署到github上<br>修改配置文件blog/_config.yml，修改deploy项的内容，如下所示：</p><h1 id="Deployment-注释"><a href="#Deployment-注释" class="headerlink" title="Deployment 注释"></a>Deployment 注释</h1><h2 id="Docs-https-hexo-io-docs-deployment-html"><a href="#Docs-https-hexo-io-docs-deployment-html" class="headerlink" title="Docs: https://hexo.io/docs/deployment.html"></a>Docs: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/deployment.html</a></h2><p>deploy:</p><h1 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h1><p>  type: git</p><h1 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h1><p>  repo: <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:xuezhisd/xuezhisd.github.io.git</p><h1 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h1><p>  branch: master<br>注意：type: git中的冒号后面由空格。<br>注意：将<a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:xuezhisd/xuezhisd.github.io.git中的用户名换成自己的用户名<a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:github_username/github_username.github.io.git。</p><p>4.部署hexo<br>输入下面的命令将hexo博客部署到github中：</p><h1 id="清空静态页面"><a href="#清空静态页面" class="headerlink" title="清空静态页面"></a>清空静态页面</h1><p>hexo clean</p><h1 id="生成静态页面-1"><a href="#生成静态页面-1" class="headerlink" title="生成静态页面"></a>生成静态页面</h1><p>hexo generate</p><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p>hexo deploy<br>打开网页，输入<a href="http://github_username.github.io，打开github上托管的博客。如我的博客地址是：http://xuezhisd.github.io。" target="_blank" rel="noopener">http://github_username.github.io，打开github上托管的博客。如我的博客地址是：http://xuezhisd.github.io。</a><br>hexo命令缩写<br>hexo支持命令缩写，如下所示。hexo g等价于hexo generate<br>hexo g：hexo generate<br>hexo c：hexo clean<br>hexo s：hexo server<br>hexo d：hexo deploy</p><p>5.更换主题<br>写文章<br>执行下列语句生成一个名为title的空文章，当然还是在根目录下Git Bush Here。</p><p>hexo n “title”</p><p>可以看到提示生成了一个title.md，博客内容是用markdown语法写的。可以使用sublime的插件，也可以在线编辑，还有专门的编辑器,用sublime打开。</p><p>title: postName #文章页面上的显示名称，可以任意修改，不会出现在URL中<br>date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改<br>categories: #文章分类目录，可以为空，注意:后面有个空格<br>tags: #文章标签，可空，多标签请用格式[tag1,tag2,tag3]，注意 “:” 后面有个空格<br>—这里开始使用markdown格式输入你的正文。</p><p>文章摘要<br>在需要显示摘要的地方添加如下代码即可：</p><p>以上是摘要</p><p>以下是余下全文</p><p>more以上内容即是文章摘要，在主页显示，more以下内容点击『&gt; Read More』链接打开全文才显示。</p><p>主题安装<br>hexo的主题列表Hexo Themes。<br>个人推荐的主题<br>fexo ——这是一个极简的主题，喜欢简洁的可以看看。<br>random——这个是我现在正在使用的主题，自定义的轮播图看起来很好。<br>TKL——这个主题是我那个报废的博客用的，一个优雅的响应式主题。<br>yilia——优雅简洁响应式主题。<br>下面的安装以random为例<br>在你的博客根目录里，执行如下的命令：</p><p>git clone <a href="https://github.com/stiekel/hexo-theme-random.git" target="_blank" rel="noopener">https://github.com/stiekel/hexo-theme-random.git</a> themes/random</p><p>然后修改博客的主配置文件，将主题设置为random<br>themes: random</p><p>升级</p><p>cd themes/random<br>git pull</p><p>更具体的使用方式都在主题的文档中，请自行观看。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;a.注册godday购买域名，注册GitHub当服务器。&lt;br&gt;b.下载git,下载node.js&lt;br&gt;c.开始配置&lt;br&gt;1.配置SSH&lt;br&gt;打开git bash终端。&lt;br&gt;设置user.name和user.email。&lt;/p&gt;
&lt;p&gt;git config –glo
      
    
    </summary>
    
    
  </entry>
  
</feed>
